#!/bin/bash
#############################################################################
#  Copyright (C) 2016
#  
#  Hamster is free software; you can redistribute it and/or modify it
#  under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#  
#  Hamster is distributed in the hope that it will be useful, but
#  WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#  General Public License for more details.
#  
#  You should have received a copy of the GNU General Public License
#  along with Hamster.  If not, see <http://www.gnu.org/licenses/>.
#############################################################################

# This script is for sleeping.  For the most part, it shouldn't be
# edited.  See job submission files for configuration details.

source ${HAMSTER_SCRIPTS_HOME}/lib/hamster-lib-log
source ${HAMSTER_SCRIPTS_HOME}/lib/hamster-lib-run
source ${HAMSTER_SCRIPTS_HOME}/util/hamster-io

# Will set hamster_jobtimeseconds
Hamster_job_time_seconds

secondsleft=$hamster_jobtimeseconds

if [ "$1X" == "X" ]
then
    Hamster_output_internal_error "hamster-run-sleep, first argument unset"
    exit 1
fi

if [ "$1" != "normal" ] && [ "$1" != "countdown" ]
then
    Hamster_output_internal_error "hamster-run-sleep, first argument invalid = $1"
    exit 1
fi

sleeptype=$1

if [ "${sleeptype}" == "normal" ]
then
    sleep ${secondsleft}
else
# 3600 = 60 mins
    if [ "${secondsleft}" -gt 3600 ]
    then
        sleepseconds=`expr ${secondsleft} - 3600`
        sleep ${sleepseconds}

        Hamster_echo "*** Warning - 60 minutes left"
        secondsleft=3600
    fi

# 1800 = 30 mins 
    if [ "${secondsleft}" -gt 1800 ]
    then
        sleepseconds=`expr ${secondsleft} - 1800`
        sleep ${sleepseconds}

        Hamster_echo "*** Warning - 30 minutes left"
        secondsleft=1800
    fi

# 300 = 5 mins 
    if [ "${secondsleft}" -gt 300 ]
    then
        sleepseconds=`expr ${secondsleft} - 300`
        sleep ${sleepseconds}

        Hamster_echo "*** Warning - 5 minutes left"
        secondsleft=300
    fi

# 60 = 1 min 
    if [ "${secondsleft}" -gt 60 ]
    then
        sleepseconds=`expr ${secondsleft} - 60`
        sleep ${sleepseconds}

        Hamster_echo "*** Warning - 1 minute left"
        secondsleft=60
    fi

    sleep ${secondsleft}
fi

exit 0
