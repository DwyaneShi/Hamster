#!/bin/bash
#############################################################################
#  Copyright (C) 2016
#
#  Hamster is free software; you can redistribute it and/or modify it
#  under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  Hamster is distributed in the hope that it will be useful, but
#  WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#  General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with Hamster.  If not, see <http://www.gnu.org/licenses/>.
#############################################################################

# This file has common node identification functions. These are used
# predominantly to determine what node you're presently
# configuring/setting up/running on.  Should be sourced and used only
# after hamster-setup-core is run b/c it depends on master/slaves to be
# setup.

source ${HAMSTER_SCRIPTS_HOME}/lib/exports/hamster-exports-dirs
source ${HAMSTER_SCRIPTS_HOME}/lib/hamster-lib-hadoop-helper

Hamster_am_I_master () {
    local myhostname=$(Hamster_hostname)

    Hamster_make_all_local_dirs_node_specific

    for project in HADOOP
    do
        local setupvar="${project}_SETUP"
        local confdirvar="${project}_CONF_DIR"
        if [ "${!setupvar}" == "yes" ] && [ -f "${!confdirvar}/masters" ]
        then
            if grep -q -E "^${myhostname}$" ${!confdirvar}/masters
            then
                return 0
            fi
        fi
    done

    return 1
}

# For the common pattern
__Hamster_am_I_a_project_node () {
    local myhostname=$(Hamster_hostname)
    local confdir=$1
    local noderankvar=$2
    local mastersfile=$3
    local slavesfile=$4

    Hamster_make_all_local_dirs_node_specific

    if [ "${mastersfile}X" != "X" ]
    then
        if grep -q -E "^${myhostname}$" ${confdir}/${mastersfile}
        then
            eval ${noderankvar}=0
            return 0
        fi
    fi

    if [ "${slavesfile}X" != "X" ]
    then
        if grep -q -E "^${myhostname}$" ${confdir}/${slavesfile}
        then
            local noderank=`grep -n -E "^${myhostname}$" ${confdir}/${slavesfile} | awk --field-separator=':' '{print $1}'`
            eval ${noderankvar}="${noderank}"
            return 0
        fi
    fi

    return 1
}

Hamster_am_I_a_hadoop_node () {
    __Hamster_am_I_a_project_node ${HADOOP_CONF_DIR} "hadoopnoderank" "masters" $(Hamster_hadoop_slave_or_worker_file)
    local exitval=$?
    if [ "${exitval}" == "1" ]
    then
        __Hamster_am_I_a_hadoop_namenode_in_hdfs_federation
        return $?
    fi

    return ${exitval}
}

Hamster_am_I_a_hadoop_namenode () {
    # Only check masters for namenode
    __Hamster_am_I_a_project_node ${HADOOP_CONF_DIR} "hadoopnoderank" "masters" ""
    local exitval=$?
    if [ "${exitval}" == "1" ]
    then
        __Hamster_am_I_a_hadoop_namenode_in_hdfs_federation
        return $?
    fi

    return ${exitval}
}
