#!/bin/bash
#############################################################################
#  Copyright (C) 2016
#
#  Hamster is free software; you can redistribute it and/or modify it
#  under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  Hamster is distributed in the hope that it will be useful, but
#  WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#  General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with Hamster.  If not, see <http://www.gnu.org/licenses/>.
#############################################################################

# This file has common hadoop checks, does not assume anything setup yet

source ${HAMSTER_SCRIPTS_HOME}/lib/hamster-lib-log
source ${HAMSTER_SCRIPTS_HOME}/lib/hamster-lib-hadoop-config

Hamster_hadoop_filesystem_mode_is_hdfs_type () {
    if [ "${HADOOP_FILESYSTEM_MODE}" == "hdfs" ]
    then
        return 0
    fi
    return 1
}

Hamster_get_hdfs_stored_version_path () {
    Hamster_get_networkedhdfspath
    hamster_hdfs_stored_version_path=${hamster_networkedhdfspath}/hamster.hadoop-version
}

Hamster_get_hdfs_stored_nodecount_path () {
    Hamster_get_networkedhdfspath
    hamster_hdfs_stored_nodecount_path=${hamster_networkedhdfspath}/hamster.node-count
}

Hamster_hadoop_version () {
    echo ${HADOOP_VERSION%%.*}
}

Hamster_hadoop_is () {
    local version=$1
    if [ "$(Hamster_hadoop_version)" == "${version}" ]
    then
        return 0
    else
        return 1
    fi
}

Hamster_hadoop_is_HDFS () {
    if [ $# -gt 0 ]
    then
        __Hamster_hadoop_is_type HDFS $1
    else
        __Hamster_hadoop_is_type HDFS
    fi
}

Hamster_hadoop_slave_or_worker_file () {
    if [ "$(Hamster_hadoop_version)" == "3" ]
    then
        echo "workers"
    else
        echo "slaves"
    fi
}

Hamster_hadoop_setup_type_is_valid () {
    Hamster_array_contains hamster_hadoop_valid_setup_type $1
}

Hamster_hadoop_killall_if_is_set () {
    local num=$1
    slave_file=$(Hamster_hadoop_slave_or_worker_file)
    filename=${HADOOP_CONF_DIR}/${slave_file}
    if [ -f "${filename}" ]
    then
        while read node
        do
            if [ "${num}" -le "0" ]
            then
                break;
            fi
            Hamster_echo "Killing DN: ${node}"
            command="ssh ${node} ${JAVA_HOME}/bin/jps -lv | grep -v 'sun.tools.jps.Jps' | awk '{print \$1}' | xargs -I{} kill -9 {}"
            echo "Running $command" >&2
            $command
            num=$[$num - 1]
        done < ${filename}
    fi
}
